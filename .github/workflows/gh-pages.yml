name: Documentation Workflow

on:
  # Deploy principal quando houver push para main
  push:
    branches:
      - main
  # Preview para Pull Requests
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  # Job para deploy principal - executa em pushes para main
  deploy-production:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install serve (para consist√™ncia)
        run: npm install -g serve
      
      # Deploy para GitHub Pages - site principal
      - name: Deploy to production
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs  # ou o diret√≥rio que voc√™ est√° usando
          destination_dir: ./  # publica na raiz de gh-pages
          exclude_assets: '.github,node_modules,.gitignore,.git,package*.json'

  # Job para criar preview - executa quando PR aberta/atualizada
  deploy-preview:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install serve
        run: npm install -g serve
      
      # Adiciona barra de notifica√ß√£o de preview nos arquivos HTML
      - name: Add preview notification
        run: |
          # Cria arquivo tempor√°rio com a notifica√ß√£o
          cat > preview-banner.html << 'EOL'
          <div style="position:fixed; top:0; left:0; right:0; background:#ff9800; color:white; text-align:center; padding:8px; z-index:9999; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;">
            üîç Preview da PR #${{ github.event.pull_request.number }} - 
            <a href="https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}" style="color:white; text-decoration:underline;">Voltar para PR</a>
          </div>
          EOL
          
          # Adiciona a notifica√ß√£o no topo de cada arquivo HTML
          find . -name "*.html" -type f -exec sed -i '/<body/i <!-- Preview Banner -->' {} \;
          find . -name "*.html" -type f -exec sed -i "/<body[^>]*>/r preview-banner.html" {} \;
          
          rm preview-banner.html
      
      # Gera ID √∫nico para o ambiente baseado no n√∫mero da PR
      - name: Set environment name
        run: echo "PREVIEW_ID=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
      
      # Deploy para GitHub Pages em um subdiret√≥rio para a PR
      - name: Deploy to preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs  # ou o diret√≥rio que voc√™ est√° usando
          destination_dir: previews/${{ env.PREVIEW_ID }}
          exclude_assets: '.github,node_modules,.gitignore,.git,package*.json'
      
      # Adiciona coment√°rio na PR com o link para a preview
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const previewUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/previews/${{ env.PREVIEW_ID }}`;
            
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const botComment = comments.data.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('üìù Documenta√ß√£o de Preview dispon√≠vel em:');
            });
            
            const commentBody = `üìù Documenta√ß√£o de Preview dispon√≠vel em: [Visualizar Mudan√ßas](${previewUrl})
            
            _Preview atualizada em: ${new Date().toISOString()}_`;
            
            if (botComment) {
              github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            }

  # Job para limpar a preview quando o PR for fechado
  cleanup-preview:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Cria diret√≥rio vazio para substituir a preview
      - name: Create empty directory
        run: |
          mkdir -p empty
          touch empty/.nojekyll
          echo "<html><body style='font-family: Arial, sans-serif; text-align: center; padding: 50px;'><h1>Preview Removida</h1><p>Esta preview foi removida porque a PR #${{ github.event.pull_request.number }} foi fechada.</p><p><a href='https://github.com/${{ github.repository }}'>Voltar para o reposit√≥rio</a></p></body></html>" > empty/index.html
      
      # Remove a preview substituindo com diret√≥rio vazio
      - name: Remove PR Preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./empty
          destination_dir: previews/pr-${{ github.event.pull_request.number }}
          keep_files: true  # Mant√©m arquivos existentes que n√£o ser√£o substitu√≠dos
      
      # Adiciona coment√°rio informando que a preview foi removida
      - name: Comment on closed PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üßπ O ambiente de preview foi removido porque esta PR foi fechada.`
            });